 #!/bin/bash

 green="\033[0;32m"
 no_color="\033[0m"
 red="\033[1;31m"
 blue="\033[1;34m"

function banner() {

	 echo -e """
								       +-------------+
								       |KaliFixer 2.0|   
	 +---------------------------------------------------------------------------------+
	 |                            Author:- Techwebspot                                 |
	 +---------------------------------------------------------------------------------+
	 ${blue}
			..............                                  
			            ..,;:ccc,.                           
			          ......''';lxO.                          
			.....''''..........,:ld;                         
			           .';;;:::;,,.x,                        
			      ..'''.            0Xxoc:,.  ...            
			  ....                ,ONkc;,;cokOdc',.          
			 .                   OMo           ':ddo.        
			                    dMc               :OO;       
			                    0M.                 .:o.     
			                    ;Wd                          
			                     ;XO,                        
			                       ,d0Odlc;,..               
			                           ..',;:cdOOd::,.       
			                                    .:d;.':;.    
			                                       'd,  .'    
			                                         ;l   .. 
			                                          .o    
			                                            c   
			                                            .'  
			                                             .  
			${no_color}
        +---------------------------------------------------------------------------------+
        |                Moded By : T3r@bYt3, Michael De Roover(condor)                   |
        +---------------------------------------------------------------------------------+
	"""
}

function detect_version() {

	printf "${blue}[+] Detecting the version of your Kali Linux machine...\n\n${no_color}"

	VERSION=$(grep VERSION_ID /etc/os-release | cut -d '"' -f2)

	if [[ $VERSION == 1.[0-9] ]]
	then
		echo "[+] Using Kali Moto"
	elif [[ $VERSION == 2.[0-9] ]]
	then
		echo "[+] Using Kali Sana"
	elif [[ $VERSION == 201[0-9].[0-9] ]]
	then
		echo "[+] Using Kali Rolling"
	else
		printf "${red}[-] Can't detect the version of your machine, make sure you are using Kali Linux Operating System ${no_color}\n"
	fi
}

function update_repos() {

	if [[ $VERSION == 1.[0-9] ]]
	then
		if [ -w /etc/apt/sources.list ]
		then
			printf "[+] Updating repos, please wait...\n"
			cat <<-EOF > /etc/apt/sources.list
			deb http://old.kali.org/kali moto main non-free contrib
			# For source package access, uncomment the following line
			# deb-src http://old.kali.org/kali moto main non-free contrib
			EOF
		fi
	elif [[ $VERSION == 2.[0-9] ]]
	then
		if [ -w /etc/apt/sources.list ]
		then
			printf "[+] Updating repos, please wait...\n"
			cat <<-EOF > /etc/apt/sources.list
			deb http://old.kali.org/kali sana main non-free contrib
			# For source package access, uncomment the following line
			# deb-src http://old.kali.org/kali sana main non-free contrib
			EOF
		fi
	elif [[ $VERSION == 201[0-9].[0-9] ]]
	then
		if [ -w /etc/apt/sources.list ]
		then
			printf "[+] Updating repos, please wait...\n"
			cat <<-EOF > /etc/apt/sources.list
			deb http://http.kali.org/kali kali-rolling main contrib non-free
			# For source package access, uncomment the following line
			# deb-src http://http.kali.org/kali kali-rolling main contrib non-free
			EOF
		fi
	else
		printf "${red}[-] Can't detect the version of your machine, make sure you are using Kali Linux Operating System${no_color}\n"
	fi
	printf "${no_color}Press Any Key To Return To Main Menu...\n"
	main
}

function sound() {

	python2 - <<END
	from os import system
	import sys
	import commands
	ch=str(raw_input("\033[0mInstall alsa-utils (y/n) "))
	if ch.lower()=="y":
		result=system("sudo apt-get install alsa-utils -y")
		if result==0:
			print
			print "\033[1;34m\n\n[*] Command Ran Successfully"
			print "\033[1;33mHow To Use: In your terminal use the command (alsamixer) and use your keyboard"
		else:
			print "\n\n"
			print "\033[1;31mOOPS Error Encountered"
			raw_input("\033[0mPress Any Key To Return To Main Menu...")
END
	main
}

function install_vlc() {

	python2 - <<END
	from os import system
	import sys
	import commands
	ch=str(raw_input("\033[0mInstall VLC (y/n) "))
	if ch.lower()=="y":
		result=system("sudo apt install vlc")
		if result==0:
			print
			print "\033[1;34m\n\n[*] Command Ran Successfully"
			print "\033[1;33mNote: Either type vlc in terminal or double click on icon"
		else:
			print "\n\n"
			print "\033[1;31mOOPS Error Encountered"
			raw_input("\033[0mPress Any Key To Return To Main Menu...")
END
	main
}

function run_vlc() {

	python2 - <<END
	from os import system
	import sys
	import commands
	ch=str(raw_input("\033[0mAllow VLC to Run As ROOT USER (y/n) "))
	if ch.lower()=="y":
		result=system("sed -i 's/geteuid/getppid/' /usr/bin/vlc")
		if result==0:
			print
			print "\033[1;34m\n\n[*] Command Ran Successfully"
			print "\033[1;33mNote: Either type vlc in terminal or double click on icon"
		else:
			print "\n\n"
			print "\033[1;31mOOPS Error Encountered"
			raw_input("\033[0mPress Any Key To Return To Main Menu...")
END
	main
}

function alsamixer() {

	python2 - <<END
	from os import system
	import sys
	import commands
	system("alsamixer")
END
	main
}

function adduser() {

	python2 - <<END
	from os import system
	import sys
	import commands
	usr=str(raw_input("\033[0mEnter Username "))
	user="adduser %s"%(usr)
	if system(user)==0:
		print "\033[1;33mUser - %s has been created with password - <your_password>"%(usr)
		raw_input("\033[0mPress Any Key To Return To Main Menu...")
	else:
		print "\n\n"
		print "\033[1;31mOOPS Error Encountered"
		raw_input("\033[0mPress Any Key To Return To Main Menu...")
END
	main
}

function suser() {

	python2 - <<END
	from os import system
	import sys
	import commands
	usr=str(raw_input("\033[0mEnter Username "))
	user="usermod -aG sudo %s"%(usr)
	if system(user)==0:
		print "\033[1;33mUser - %s has been provided with sudo priviliges"%(usr)
		raw_input("\033[0mPress Any Key To Return To Main Menu...")
	else:
		print "\n\n"
		print "\033[1;31mOOPS Error Encountered"
		raw_input("\033[0mPress Any Key To Return To Main Menu...")
END
	main
}

function deluser(){

	python2 - <<END
	from os import system
	import sys
	import commands
	usr=str(raw_input("\033[0mEnter Username "))
	user="deluser %s"%(usr)
	if system(user)==0:
		print "\033[1;33mUser - %s has been deleted"%(usr)
		raw_input("\033[0mPress Any Key To Return To Main Menu...")
	else:
		print "\n\n"
		print "\033[1;31mOOPS Error Encountered"
		raw_input("\033[0mPress Any Key To Return To Main Menu...")
END
	main
}

function tv() {

	python2 - <<END
	from os import system
	import sys
	import commands
	ch=str(raw_input("\033[0mInstall teamviwer (y/n) "))
	if ch.lower()=="y":
		downtv=system("wget https://downloadus2.teamviewer.com/download/version_12x/teamviewer_12.0.76279_i386.deb")
		if downtv==0:
			addi386=system("dpkg --add-architecture i386")
			update=system("apt update")
			install1=system("dpkg -i teamviewer_12.0.76279_i386.deb")
			dependencies=system("apt install -f")
			install2=system("dpkg -i teamviewer_12.0.76279_i386.deb")
			deltv=system("rm -rf teamviewer_12.0.76279_i386.deb")
			if addi386==0 and update==0 and install1==0 and insall2==0 and dependencies==0:
				print "\033[1;33mTeamviewer has been installed on your distro"
			else:
				if not addi386==0:
					print "\033[1;31mUnable to add architecture i386"
					raw_input("Press Any Key To Return To Main Menu...")
				elif not update==0:
					print "\033[1;31mUnable to update your repos"
					raw_input("Press Any Key To Return To Main Menu...")
				elif not install2==0:
					print "\033[1;31mUnable to install teamviewer. But all dependencies error have been fixed"
					raw_input("Press Any Key To Return To Main Menu...")
				elif not dependencies==0:
					print "\033[1;31mUnable to install dependencies"
					raw_input("Press Any Key To Return To Main Menu...")
		else:
			print "\n\n"
			print "\033[1;31mOOPS Error Encountered"
			raw_input("Press Any Key To Return To Main Menu...")
END
	main
}

function upgrade() {

	update_repos
	apt-get upgrade
	apt-get dist-upgrade
	python2 - <<END
	raw_input("Press Any Key To Return To Main Menu...")
END
	main
}

function menu() {

	printf "\n\033[1;35m \t\t\t\t-=[   M E N U   ]=-\n\033[0m\n\033[0;31m1)  \033[0;33mSolve Sound Problem\t\t\t\t\033[0m\033[0;31m2)  \033[0;33mInstall VLC Media Player\n"
	printf "\033[0;31m3)  \033[0;33mAllow VLC to Run As Root User\t\t\033[0m\033[0;31m4)  \033[0;33mStart Sound Volume Ajuster ( alsamixer )\n"
	printf "\033[0;31m5)  \033[0;33mAdd a new user\t\t\t\t\033[0m\033[0;31m6)  \033[0;33mProvide Existing User With SUDO Priviliges\n"
	printf "\033[0;31m7)  \033[0;33mDelete Existing User\t\t\t\033[0m\033[0;31m8)  \033[0;33mInstall Teamvieweri386 for Debian\n"
	printf "\033[0;31m9)  \033[0;33mUpdate All Repositories\t\t\t\033[0m\033[0;31m10) \033[0;33mUpgrade All Package and Distro\n"

}

function main() {

	menu

	printf "${green}"
 	read -p "[+] Choose Your Option (1 - 10 or 99 to EXIT the program): " input
 	printf "${no_color}"


 	if [ $input == 1 ]
 	then
 		sound
 	elif [ $input == 2 ]
 	then 
 		install_vlc
 	elif [ $input == 3 ]
 	then
 		run_vlc
 	elif [ $input == 4 ]
 	then
 		alsamixer
 	elif [ $input == 5 ]
 	then
 		adduser
 	elif [ $input == 6 ]
 	then
 		suser
 	elif [ $input == 7 ]
 	then
 		deluser
 	elif [ $input == 8 ]
 	then
 		tv
 	elif [ $input == 9 ]
 	then
 		update_repos
 	elif [ $input == 10 ]
 	then
 		upgrade
 	elif [ $input == 99 ]
 	then
 		exit 1
 	else 
 		printf "\n${red}[-] Wrong input please try again....${no_color}\n"
 	fi 

 }

if [ $EUID == 0 ]
	then
		banner
		detect_version
fi

while true ; do
	if [ $EUID == 0 ]
	then
		main
	else
		banner
		printf "${red}"
		printf "\n\t------------------------------------------------------------------------------------"
		printf "\n\t                                  Run as a root                                     "
		printf "\n\t------------------------------------------------------------------------------------\n"
		printf "${no_color}"
		exit 1
	fi
done
